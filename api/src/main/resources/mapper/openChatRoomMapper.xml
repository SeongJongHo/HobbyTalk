<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jongho.openChat.infra.mapper.OpenChatRoomMapper">
    <select id="countByManagerId" parameterType="Long" resultType="int">
        SELECT
            COUNT(*) AS count
        FROM open_chat_rooms
        WHERE open_chat_rooms.manager_id = #{managerId}
        AND open_chat_rooms.deleted_time is null
        LIMIT 1
    </select>
    <insert id="createOpenChatRoom" parameterType="com.jongho.openChat.domain.model.OpenChatRoom" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO open_chat_rooms (manager_id, title, notice, category_id, maximum_capacity, password)
        VALUES (#{managerId}, #{title}, #{notice}, #{categoryId}, #{maximumCapacity}, #{password})
    </insert>
    <update id="updateIncrementCurrentCapacity">
        UPDATE open_chat_rooms
        SET current_attendance = #{currentAttendance} + 1
        WHERE id = #{id}
        AND deleted_time is null
    </update>
    <select id="selectOneOpenChatRoomByManagerIdAndTitle" parameterType="com.jongho.openChat.domain.model.OpenChatRoom" resultType="com.jongho.openChat.domain.model.OpenChatRoom">
        SELECT
            id,
            title,
            notice,
            manager_id,
            category_id,
            maximum_capacity,
            current_attendance,
            password
        FROM open_chat_rooms
        WHERE manager_id = #{managerId}
        AND title = #{title}
        AND deleted_time is null
        LIMIT 1
    </select>
    <select id="selectOneOpenChatRoomByIdForUpdate" parameterType="Long" resultType="com.jongho.openChat.domain.model.OpenChatRoom">
        SELECT
            id,
            title,
            notice,
            manager_id,
            category_id,
            maximum_capacity,
            current_attendance,
            password
        FROM open_chat_rooms
        WHERE id = #{id}
        AND deleted_time is null
        LIMIT 1
        FOR UPDATE
    </select>
    <select id="selectOneOpenChatRoomById" parameterType="Long" resultType="com.jongho.openChat.domain.model.OpenChatRoom">
        SELECT
        id,
        title,
        notice,
        manager_id,
        category_id,
        maximum_capacity,
        current_attendance,
        password
        FROM open_chat_rooms
        WHERE id = #{id}
        AND deleted_time is null
        LIMIT 1
        FOR UPDATE
    </select>
    <update id="updateOpenChatRoomNotice">
        UPDATE open_chat_rooms
        SET notice = #{notice}
        WHERE id = #{id}
        AND deleted_time is null
    </update>
    <select id="selectJoinOpenChatRoomByUserId" parameterType="Long" resultType="com.jongho.openChat.domain.model.redis.CachedOpenChatRoom">
        SELECT
            open_chat_rooms.id,
            open_chat_rooms.title,
            open_chat_rooms.notice,
            open_chat_rooms.manager_id,
            open_chat_rooms.category_id,
            open_chat_rooms.maximum_capacity,
            open_chat_rooms.current_attendance,
            open_chat_rooms.created_time
        FROM open_chat_rooms
        INNER JOIN open_chat_room_users
            ON open_chat_rooms.id = open_chat_room_users.open_chat_room_id
            AND open_chat_room_users.user_id = #{userId}
            AND open_chat_room_users.deleted_time is null
        WHERE open_chat_room_users.user_id = #{userId}
            AND open_chat_rooms.deleted_time is null
    </select>
    <select id="selectOpenChatRoomUser" parameterType="Long">
        SELECT
            open_chat_room_users.user_id
        FROM open_chat_rooms
        INNER JOIN open_chat_room_users
            ON open_chat_rooms.id = open_chat_room_users.open_chat_room_id
            AND open_chat_room_users.deleted_time is null
        WHERE open_chat_rooms.id = #{openChatRoomId}
            AND open_chat_rooms.deleted_time is null
    </select>
    <select id="selectRedisOpenChatRoomById" parameterType="Long" resultType="com.jongho.openChat.domain.model.redis.CachedOpenChatRoom">
        SELECT
            id,
            title,
            notice,
            manager_id,
            category_id,
            maximum_capacity,
            current_attendance,
            created_time
        FROM open_chat_rooms
        WHERE id = #{openChatRoomId}
        AND deleted_time is null
        LIMIT 1
    </select>
</mapper>