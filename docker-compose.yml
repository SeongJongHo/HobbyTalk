version: '3.8'

networks:
  app_network:
    driver: bridge
    name: hobby_talk_java_app_network

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_PASSWORD}" ]
      interval: 3s
      timeout: 2s
      retries: 10
      start_period: 10s
    networks:
      - app_network

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    environment:
      ZOOKEEPER_CLIENT_PORT: "${ZOOKEEPER_CLIENT_PORT}"
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}"
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1_container
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: "${KAFKA_BROKER_ID}"
      KAFKA_ZOOKEEPER_CONNECT: "${KAFKA_ZOOKEEPER_CONNECT}"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}"
      KAFKA_ADVERTISED_LISTENERS: "${KAFKA_ADVERTISED_LISTENERS1}"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}"
    ports:
      - "${KAFKA_INTERNAL_PORT}:${KAFKA_INTERNAL_PORT}"
      - "${KAFKA_EXTERNAL_PORT}:${KAFKA_EXTERNAL_PORT}"
    networks:
      - app_network

  api_test:
    build:
      context: .
      dockerfile: Dockerfile
      target: tester
    container_name: api_test_container
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_healthy
    networks:
      - app_network

  api_run:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: api_container
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - JAVA_TOOL_OPTIONS=-Xms2g -Xmx2g -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=0.0.0.0
    pid: "host"
    ports:
      - "${API_PORT}:${API_PORT}"
      - "9010:9010"
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_healthy
    networks:
      - app_network